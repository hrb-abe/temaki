// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../react
//   ../styled-components

declare module 'hrb-temaki' {
    import { RequiredThemeProps as _RequiredThemeProps } from 'hrb-temaki/modules/theme';
    export const Text: import("react").FunctionComponent<{}>;
    export const colors: {
        primary: {
            default: string;
            N10: string;
            N20: string;
            N30: string;
            N40: string;
            N50: string;
            N60: string;
            N70: string;
            N80: string;
            N90: string;
            N95: string;
            P10: string;
            P20: string;
            P30: string;
            P40: string;
            P50: string;
            P60: string;
            P70: string;
            P80: string;
            P90: string;
        };
        white: string;
        utility: {
            red: string;
        };
        text: string;
    };
    export const defaultTheme: _RequiredThemeProps;
    export type RequiredThemeProps = _RequiredThemeProps;
}

declare module 'hrb-temaki/modules/theme' {
    import * as React from 'react';
    import * as styledComponents from 'styled-components';
    export type RequiredThemeProps = {
        text: string;
    };
    export const defaultTheme: RequiredThemeProps;
    const styled: styledComponents.ThemedBaseStyledInterface<RequiredThemeProps>, ServerStyleSheet: typeof styledComponents.ServerStyleSheet, StyleSheetManager: typeof styledComponents.StyleSheetManager, createGlobalStyle: <P extends object = {}>(first: styledComponents.CSSObject | TemplateStringsArray | styledComponents.InterpolationFunction<styledComponents.ThemedStyledProps<P, RequiredThemeProps>>, ...interpolations: styledComponents.Interpolation<styledComponents.ThemedStyledProps<P, RequiredThemeProps>>[]) => styledComponents.GlobalStyleComponent<P, RequiredThemeProps>, css: styledComponents.BaseThemedCssFunction<RequiredThemeProps>, isStyledComponent: typeof styledComponents.isStyledComponent, keyframes: (strings: TemplateStringsArray | styledComponents.CSSKeyframes, ...interpolations: styledComponents.SimpleInterpolation[]) => styledComponents.Keyframes, withTheme: styledComponents.BaseWithThemeFnInterface<RequiredThemeProps>;
    const ThemeConsumer: React.ExoticComponent<React.ConsumerProps<RequiredThemeProps>>;
    const ThemeContext: React.Context<RequiredThemeProps>;
    const ThemeProvider: React.ComponentClass<styledComponents.ThemeProviderProps<RequiredThemeProps, RequiredThemeProps>, any>;
    export default styled;
    export { ServerStyleSheet, StyleSheetManager, ThemeConsumer, ThemeContext, ThemeProvider, createGlobalStyle, css, isStyledComponent, keyframes, withTheme };
}

